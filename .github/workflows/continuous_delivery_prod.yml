name: Build & Push release Docker Image

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release Tag to Deploy'
        required: true
        default: 'latest'
      overrideLatest:
        description: 'Override the latest tag'
        required: false
        default: 'false'
  release:
    types: [published]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Unit Tests
        run: mvn -B test --file pom.xml

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Build Docker Image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/quizhub:${{ github.event.release.tag_name || github.event.inputs.releaseTag }}

  push:
    name: Push
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        if: always() && steps.build.outputs.tag_name != 'false'
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/quizhub:${{ steps.build.outputs.tag_name }}

      - name: Push 'latest' Tag
        if: always() && github.event.inputs.overrideLatest == 'true' && steps.build.outputs.tag_name != 'false'
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/quizhub:latest
